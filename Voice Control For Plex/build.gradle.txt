import groovy.swing.SwingBuilder
apply plugin: 'android'

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
    }

    signingConfigs {
        debug {
            storeFile file("/path/to/keystore/file")
        }
        release {
            storeFile file("/path/to/keystore/file")
            keyAlias "keyAlias"
            storePassword ""
            keyPassword ""
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            buildConfigField "boolean", "USE_BUGSENSE", "true"
        }
        debug {
            buildConfigField "boolean", "USE_BUGSENSE", "false"
        }
        beta {
            signingConfig signingConfigs.debug
            buildConfigField "boolean", "USE_BUGSENSE", "true"
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile files('libs/android-async-http-1.4.4.jar')
    compile files('libs/bugsense-3.6.jar')
    compile files('libs/simple-xml-2.7.1.jar')
    compile 'com.google.code.gson:gson:2.2.+'
    compile 'com.android.support:support-v4:+'
    compile 'com.github.codechimp-org.apprater:library:1.0.+'
    compile 'com.google.android.gms:play-services:4.4.52'
    compile 'com.android.support:appcompat-v7:19.1.+'
    compile 'com.android.support:mediarouter-v7:19.1.+'
}

gradle.taskGraph.whenReady { taskGraph ->
    if(taskGraph.hasTask(':Voice Control For Plex:assembleRelease')) {

        def pass = ''
        if(System.console() == null) {
            new SwingBuilder().edt {
                dialog(modal: true, // Otherwise the build will continue running before you closed the dialog
                        title: 'Enter password', // Dialog title
                        alwaysOnTop: true, // pretty much what the name says
                        resizable: false, // Don't allow the user to resize the dialog
                        locationRelativeTo: null, // Place dialog in center of the screen
                        pack: true, // We need to pack the dialog (so it will take the size of it's children)
                        show: true // Let's show it
                ) {
                    vbox { // Put everything below each other
                        label(text: "Please enter key passphrase:")
                        def input = passwordField()
                        button(defaultButton: true, text: 'OK', actionPerformed: {
                            pass = new String(input.password); // Set pass variable to value of input field
                            dispose(); // Close dialog
                        })
                    } // vbox end
                } // dialog end
            } // edt end
        } else {
            pass = System.console().readPassword("\nPlease enter key passphrase: ")
            pass = new String(pass)
        }

        if(pass.size() <= 0) {
            throw new InvalidUserDataException("You must enter a password to proceed.")
        }

        // -----
        // Do what you need to do with pass here!
        // -----
        android.signingConfigs.release.storePassword = pass;
        android.signingConfigs.release.keyPassword = pass;
    } // end if has task
} // end whenReady
